---
import Layout from '../layouts/Layout.astro';
import GitHubRepoCard from '../components/GitHubRepoCard.astro';
import RaycastStoreCard from '../components/RaycastStoreCard.astro';
import { Octokit } from '@octokit/rest';

// List of GitHub repos to fetch
const githubRepos = [
  {
    owner: 'sebdanielsson',
    repo: 'hogwarts-docusaurus',
  },
  {
    owner: 'sebdanielsson',
    repo: 'infra',
  },
  {
    owner: 'sebdanielsson',
    repo: 'nitmod',
  },
  {
    owner: 'sebdanielsson',
    repo: 'docker-etlegacy',
  },
  {
    owner: 'sebdanielsson',
    repo: 'sebdanielsson.github.io',
  },
  {
    owner: 'sebdanielsson',
    repo: 'ansible-role-cloudflared',
  },
  {
    owner: 'sebdanielsson',
    repo: 'compose-transmission-wireguard',
  },
  {
    owner: 'sebdanielsson',
    repo: 'Guides',
  },
];

// List of Raycast extensions to fetch
const raycastExtensions = [
  {
    store_url: 'https://www.raycast.com/SebDanielsson/repology-search',
    icon_url:
      'https://www.raycast.com/_next/image?url=https%3A%2F%2Ffiles.raycast.com%2Fjh7wv31sndbsyc2usxzab344j817&w=128&q=75',
    install_button_url:
      'https://www.raycast.com/SebDanielsson/repology-search/install_button@2x.png?v=1.1',
    name: 'Repology Search',
    description: 'Search packages from repology.org',
    downloads: 5,
    categories: ['Developer Tools', 'Web'],
  },
  {
    store_url: 'https://www.raycast.com/SebDanielsson/url-unshortener',
    icon_url:
      'https://www.raycast.com/_next/image?url=https%3A%2F%2Ffiles.raycast.com%2F7z3ytac6b18g02r2gmsagmss82pu&w=128&q=75',
    install_button_url:
      'https://www.raycast.com/SebDanielsson/url-unshortener/install_button@2x.png?v=1.1',
    name: 'URL Unshortener',
    description:
      'Unshorten/expand those pesky short links in your clipboard or text selection, enhancing your privacy and security.',
    downloads: 170,
    categories: ['Web'],
  },
];

// Fetch repo details
const octokit = new Octokit({
  auth: import.meta.env.GITHUB_TOKEN,
  userAgent: 'sebdanielsson/sebbo.io',
});

async function getRepoDetails(owner: string, repo: string) {
  try {
    const response = await octokit.repos.get({
      owner,
      repo,
    });

    const repoData = response.data;

    return {
      id: repoData.id,
      owner: repoData.owner.login,
      owner_url: repoData.owner.html_url,
      name: repoData.name,
      full_name: repoData.full_name,
      html_url: repoData.html_url,
      description: repoData.description,
      created_at: repoData.created_at,
      updated_at: repoData.updated_at,
      pushed_at: repoData.pushed_at,
      stars: repoData.stargazers_count,
      language: repoData.language,
      topics: repoData.topics,
      license: repoData.license,
    };
  } catch (error) {
    console.error('Error fetching repository details:', error);
  }
}

// Fetch repo details
const repoDetails = await Promise.all(
  githubRepos.map((repo) => getRepoDetails(repo.owner, repo.repo)),
);

// Sort by stars
repoDetails.sort((a, b) => b.stars - a.stars);
---

<Layout title="Projects">
  <main class="main-width">
    <h1>
      <span class="text-gradient text-gradient-animation">Projects</span>
    </h1>
    <div class="grid grid-cols-1 gap-3 lg:grid-cols-2">
      {repoDetails.map((repo) => <GitHubRepoCard repo={repo} />)}

      {raycastExtensions.map((extension) => <RaycastStoreCard extension={extension} />)}
    </div>
  </main>
</Layout>
