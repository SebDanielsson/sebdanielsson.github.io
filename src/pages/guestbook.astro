---
import Layout from '../layouts/Layout.astro';
import GuestbookPostBox from '../components/GuestbookPostBox.astro';
import fetch from 'node-fetch';

interface Author {
  login: string;
  avatarUrl: string;
}

interface Comment {
  author: Author;
  body: string;
  createdAt: string;
}

interface Discussion {
  title: string;
  comments: {
    nodes: Comment[];
  };
}

interface Repository {
  discussion: Discussion;
}

interface GraphQLResponse {
  data?: {
    repository: Repository;
  };
}

const GH_API = import.meta.env.GH_API;
console.log(GH_API.length);

async function getGuestbookPosts(): Promise<GraphQLResponse> {
  let results = await fetch('https://api.github.com/graphql', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      Authorization: `bearer ${GH_API}`,
    },
    body: JSON.stringify({
      query: `{
        repository(owner: "sebdanielsson", name: "sebdanielsson.github.io") {
          discussion(number: 9) {
            title
            comments(last: 100) {
              nodes {
                author {
                  login
                  avatarUrl
                }
                body
                createdAt
              }
            }
          }
        }
      }`,
    }),
  });

  let guestbookPostsResponse: GraphQLResponse = await results.json();
  return guestbookPostsResponse;
}

const guestbookPostsResponse = await getGuestbookPosts();
const guestbookPosts = guestbookPostsResponse.data.repository.discussion.comments.nodes;
---

<Layout>
  <main class="main-width">
    <!-- <h1>Guestbook</h1> -->
    <div class="relative py-6">
      <img src="/img/kilroy.svg" alt="Kilroy" class="mx-auto w-3/4 text-white md:w-1/2" />
      <button
        id="guestbook-post"
        class="absolute right-0 ml-auto -translate-y-[100%] rounded-xl bg-[--accent] px-4 py-2 text-base font-semibold text-white"
      >
        Post
      </button>
    </div>
    <div id="gisqus-post" class="">
      <span class="text-sm text-neutral-400"
        >powered by <a href="https://giscus.app" target="_blank">gisqus</a></span
      >
      <section class="giscus"></section>
      <script
        is:inline
        src="https://giscus.app/client.js"
        data-repo="sebdanielsson/sebdanielsson.github.io"
        data-repo-id="R_kgDOJITMkA"
        data-category="Guestbook"
        data-category-id="DIC_kwDOJITMkM4CcDrE"
        data-mapping="pathname"
        data-strict="0"
        data-reactions-enabled="0"
        data-emit-metadata="0"
        data-input-position="bottom"
        data-theme="https://sebbo.io/styles/giscus-dark.css"
        data-lang="en"
        crossorigin="anonymous"
        async></script>
    </div>
    <div class="mt-12 flex flex-col flex-wrap justify-between gap-12 md:flex-row">
      {
        guestbookPosts.map((post) => (
          <div class="post-container flex flex-auto sm:justify-around">
            <GuestbookPostBox post={post} />
          </div>
        ))
      }
    </div>
  </main>
</Layout>

<style>
  #gisqus-post {
    max-height: 30px;
    transition: max-height 0.5s ease-out;
    overflow: hidden;
  }

  @media screen and (min-width: 768px) {
    .post-container:nth-child(1),
    .post-container:nth-child(2),
    .post-container:nth-child(3) {
      flex-basis: 25%;
    }

    .post-container:nth-child(4) {
      flex-basis: 30%;
      margin-left: 15%;
    }

    .post-container:nth-child(5) {
      flex-basis: 30%;
      margin-right: 15%;
    }
  }

  @media screen and (max-width: 767px) {
    .post-container {
      transform: rotate(0deg) !important;
    }
  }
</style>

<script is:inline>
  document.querySelectorAll('.post-container').forEach((post) => {
    const randomDegree = Math.random() * 30 - 15;
    post.style.transform = `rotate(${randomDegree}deg)`;
  });

  function initGuestbookButton() {
    var guestbookButton = document.getElementById('guestbook-post');
    if (guestbookButton) {
      guestbookButton.removeEventListener('click', toggleGuestbook);
      guestbookButton.addEventListener('click', toggleGuestbook);
    }
  }

  function toggleGuestbook() {
    var guestbookDiv = document.getElementById('gisqus-post');
    var guestbookPost = this;
    if (guestbookDiv.style.maxHeight !== '1000px') {
      guestbookDiv.style.maxHeight = '1000px';
      guestbookPost.innerHTML = 'Close';
      guestbookPost.style.backgroundColor = 'red';
    } else {
      guestbookDiv.style.maxHeight = '1px';
      guestbookPost.innerHTML = 'Post';
      guestbookPost.style.backgroundColor = 'var(--accent)';
    }
  }

  initGuestbookButton();

  document.addEventListener('astro:after-swap', initGuestbookButton);
</script>
